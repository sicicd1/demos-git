

Exercise in private/public keys, github and git signing
=======================================================
- sign up to github, if you already have an account then don't and just
	use your existing account.
	https://github.com
- follow github instructions on creating and registering a gpg key.
	https://docs.github.com/en/github/authenticating-to-github/managing-commit-signature-verification
	* Pay attention to create a key with the same email and name of your github
	* Pay attention to create a key without a password (insist on it twice and it will work)
	account
	If generating the key takes too long here is how to speed it up:
	https://www.howtoforge.com/helping-the-random-number-generator-to-gain-enough-entropy-with-rng-tools-debian-lenny
- create a new github repositroy called "gpg-sign-demo"
- clone it
- create a commit and sign it.
	1) make sure that under [user] name, email and signingkey have the right data and identical
	to your data at github. signing key needs to be the last 8 digits of your key id as shown
	from gpg --list-keys
	2) create a commit and sign it with:
		$ git commit -S -m "message"
	optionally: put the following snipplet in your ~/.gitconfig or .git/config files:
	===========>8===============
	[commit]
	gpgsign = true
	===========>8===============
	in order to sign every commit
- push it to github.
- verity that you commit is signed
	go to the github website, find your repository, find you commit and see that is has the
	[verified] box at it's description.
